res.fcst.lower.2
res.fcst.upper.2
(Price.garch11.2 <- garchFit(~ garch(1,1), data = resid(arima113.fit),
trace = FALSE))
# res.fcst2 <- predict(Price.garch11.2, n.ahead=58, plot = TRUE, conf = .95)
res.fcst.2 <- predict(Price.garch11.2, n.ahead=58, conf = .95)
res.fcst.lower.2 <- res.fcst.2$meanForecast -
qnorm(.975) * res.fcst.2$standardDeviation
res.fcst.lower.2 <- res.fcst.2$meanForecast -
res.fcst.lower.2
res.fcst.upper.2
res.fcst.upper.2 <- res.fcst.2$meanForecast +
qnorm(.975) * res.fcst.2$standardDeviation
res.fcst.2
res.fcst.2$meanForecast
res.fcst.2$meanForecast +
qnorm(.975) * res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
arima113.fit.fcast
(arima113.fit.fcast$upper[, '%95'] - arima113.fit.fcast$mean)
(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean)
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean)
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) / qnorm(.975)
s.fcst.2 <- predict(Price.garch11.2, n.ahead=58, conf = .95)
res.fcst.lower.2 <- res.fcst.2$meanForecast -
qnorm(.975) * res.fcst.2$standardDeviation * c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) / qnorm(.975)
res.fcst.upper.2 <- res.fcst.2$meanForecast +
qnorm(.975) * res.fcst.2$standardDeviation * c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) / qnorm(.975)
Price.fcst.lower.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.lower.2
Price.fcst.upper.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.upper.2
## @knitr P4-GARCH_8
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
leg.txt <- c("Original series", "Forecasts (ARIMA(1,1,3)/GARCH(1,1))",
"95% Confidence Intervals")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 6),
col = c("black", "blue", "gray"),
bty = 'n', cex = 0.9)
s.fcst.2 <- predict(Price.garch11.2, n.ahead=58, conf = .95)
res.fcst.lower.2 <- res.fcst.2$meanForecast -
qnorm(.975) * res.fcst.2$standardDeviation * c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) / qnorm(.975)
res.fcst.upper.2 <- res.fcst.2$meanForecast +
qnorm(.975) * res.fcst.2$standardDeviation * c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) / qnorm(.975)
Price.fcst.lower.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.lower.2
Price.fcst.upper.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.upper.2
## @knitr P4-GARCH_8
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
leg.txt <- c("Original series", "Forecasts (ARIMA(1,1,3)/GARCH(1,1))",
"95% Confidence Intervals")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 6),
col = c("black", "blue", "gray"),
bty = 'n', cex = 0.9)
res.fcst.lower.2 <-
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean)
res.fcst.upper.2 <-
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean)
Price.fcst.lower.2 <- as.numeric(forecast(arima113.fit, 58)$mean) -
res.fcst.lower.2
Price.fcst.upper.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.upper.2
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
res.fcst.2
res.fcst.2$standardDeviation
Price.fcst.lower.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.2$meanForecast - c(arima113.fit.fcast$upper[, '95%'] -
arima113.fit.fcast$mean) *
res.fcst.2$standardDeviation
Price.fcst.upper.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.2$meanForecast + c(arima113.fit.fcast$upper[, '95%'] -
arima113.fit.fcast$mean) *
res.fcst.2$standardDeviation
## @knitr P4-GARCH_8
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
res.fcst.2$standardDeviation
arima113.fit.fcast$upper[, '95%']
Price.fcst.lower.3 <- arima113.fit.fcast$mean + res.fcst.3$meanForecast -
c(arima113.fit.fcast$upper[, '95%'] -
arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * res.fcst.3$standardDeviation
res.fcst.3 <- predict(Price.garch11.3, n.ahead=58, conf = .95)
(Price.garch11.3 <- garchFit(~ arma(1,3) + garch(1,1), data = diff(Price),
trace = FALSE))
res.fcst.3 <- predict(Price.garch11.3, n.ahead=58, conf = .95)
Price.fcst.lower.3 <- arima113.fit.fcast$mean + res.fcst.3$meanForecast -
c(arima113.fit.fcast$upper[, '95%'] -
arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * res.fcst.3$standardDeviation
Price.fcst.upper.3 <- arima113.fit.fcast$mean + res.fcst.3$meanForecast +
c(arima113.fit.fcast$upper[, '95%'] -
arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * res.fcst.3$standardDeviation
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.3, rev(Price.fcst.lower.3)), col=rgb(0, 0, 0, 0.25),
border = NA)
leg.txt <- c("Original series", "Forecasts (ARIMA(1,1,3)/GARCH(1,1))",
"95% Confidence Intervals")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 6),
col = c("black", "blue", "gray"),
bty = 'n', cex = 0.9)
Price.fcst.lower.2 <- arima113.fit.fcast$mean + res.fcst.2$meanForecast -
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * res.fcst.2$standardDeviation
Price.fcst.upper.2 <- arima113.fit.fcast$mean + res.fcst.2$meanForecast +
c(arima113.fit.fcast$upper[, '95%'] -
arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * res.fcst.2$standardDeviation
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
leg.txt <- c("Original series", "Forecasts (ARIMA(1,1,3)/GARCH(1,1))",
"95% Confidence Intervals")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 6),
col = c("black", "blue", "gray"),
bty = 'n', cex = 0.9)
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
leg.txt <- c("Original series", "Forecasts (ARIMA(1,1,3)/GARCH(1,1))",
"95% Confidence Intervals")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 6),
col = c("black", "blue", "gray"),
bty = 'n', cex = 0.9)
res.fcst
P4-GARCH_2
(Price.garch11 <- garch(resid(arima113.fit), trace = FALSE))
Price.garch11.res <- Price.garch11$res[-1]
t(confint(Price.garch11))
## @knitr P4-GARCH_3
par(mfrow = c(1, 2), cex.main = 0.9, par(mar = c(5, 4, 6, 2) + 0.1))
acf(Price.garch11.res, lag.max = 24,
main = paste0("ACF of the residuals and squared of an\nARIMA(1,1,3)/GARCH(1,1) model ",
"fitted to the\nU.S. inflation-adjusted average gas prices"))
acf(Price.garch11.res^2, lag.max = 24,
main = paste0("ACF of the squared residuals and squared of an\nARIMA(1,1,3)/GARCH(1,1) model ",
"fitted to the\nU.S. inflation-adjusted average gas prices"))
par(mfrow = c(1, 1), mar = c(5, 4, 4, 2) + 0.1, cex.main = 1)
## @knitr P4-GARCH_4
ht <- Price.garch11$fit[,1]^2 # conditional variance
plot(ht, main = paste0("Estimated conditional variance of the\nARIMA(1,1,3)/",
"GARCH(1,1) model fitted to the\nU.S. inflation-",
"adjusted average gas prices"))
## @knitr P4-GARCH_5
res.CI.halfwidth <- qnorm(.975) * sqrt(ht) # CI of epsilon_t
# Variation of Price during observation period
Price.lower <- fitted.values(arima113.fit) - res.CI.halfwidth
Price.upper <- fitted.values(arima113.fit) + res.CI.halfwidth
# Forecasts
# Initialize h_t (cond. variance) and epsilon_t (residuals or error term)
# 58 elements (as many as forecasts)
ht.fcst <- res.fcst <- rep(0, 58)
for (i in 1:58) {
if (i == 1) { # use last observation
ht.fcst[i] <- Price.garch11$coef[1] +
Price.garch11$coef[2] * resid(arima113.fit)[length(Price)]^2 +
Price.garch11$coef[3] * ht[length(Price)]
} else { # use previous predictions
ht.fcst[i] <- Price.garch11$coef[1] +
Price.garch11$coef[2] * res.fcst[i-1]^2 +
Price.garch11$coef[3] * ht.fcst[i-1]
}
res.fcst[i] <- sqrt(ht.fcst[i]) # epsilon_t = omega_t * sqrt(h_t)
#### SHOULDN'T I USE THIS LINE BELOW INSTEAD???
# res.fcst[i] <- rnorm(1) * sqrt(ht.fcst[i])
#### THAT GWN(0,1) COMPONENT MAKES h_t FLUCTUATES MUCH MORE
#### PROBABLY NOT APPROPRIATE FOR FORECASTING
}
res.fcst
Price.fcst.lower <- as.numeric(arima113.fit.fcast$mean) + res.fcst -
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
Price.fcst.upper <- as.numeric(arima113.fit.fcast$mean) + res.fcst -
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper, rev(Price.fcst.lower)), col=rgb(0, 0, 0, 0.25),
border = NA)
Price.fcst.upper
Price.fcst.lower <- as.numeric(arima113.fit.fcast$mean) + res.fcst -
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
Price.fcst.upper <- as.numeric(arima113.fit.fcast$mean) + res.fcst +
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
plot(arima113.fit.fcast, ylim = c(1, 5),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper, rev(Price.fcst.lower)), col=rgb(0, 0, 0, 0.25),
border = NA)
plot(arima113.fit.fcast, ylim = c(1, 7),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper, rev(Price.fcst.lower)), col=rgb(0, 0, 0, 0.25),
border = NA)
leg.txt <- c("Original series", "Forecasts (ARIMA(1,1,3)/GARCH(1,1))",
"95% Confidence Intervals")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 6),
col = c("black", "blue", "gray"),
bty = 'n', cex = 0.9)
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper, rev(Price.fcst.lower)), col=rgb(0, 0, 0, 0.25),
border = NA)
leg.txt <- c("Original series", "Forecasts (ARIMA(1,1,3)/GARCH(1,1))",
"95% Confidence Intervals")
legend("topleft", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 6),
col = c("black", "blue", "gray"),
bty = 'n', cex = 0.9)
## @knitr P4-GARCH_7
(Price.garch11.2 <- garchFit(~ garch(1,1), data = resid(arima113.fit),
trace = FALSE))
# res.fcst2 <- predict(Price.garch11.2, n.ahead=58, plot = TRUE, conf = .95)
res.fcst.2 <- predict(Price.garch11.2, n.ahead=58, conf = .95)
Price.fcst.lower.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.2$meanForecast - c(arima113.fit.fcast$upper[, '95%'] -
arima113.fit.fcast$mean) *
res.fcst.2$standardDeviation
res.fcst.2 <- predict(Price.garch11.2, n.ahead=58, conf = .95)
Price.fcst.lower.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.lower.2
Price.fcst.upper.2 <- as.numeric(forecast(arima113.fit, 58)$mean) +
res.fcst.upper.2
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
Price.fcst.lower.2 <- arima113.fit.fcast$mean + res.fcst.2$meanForecast -
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * res.fcst.2$standardDeviation
Price.fcst.upper.2 <- arima113.fit.fcast$mean + res.fcst.2$meanForecast +
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * res.fcst.2$standardDeviation
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
Price.upper <- fitted.values(arima113.fit) + res.CI.halfwidth
# Forecasts
# Initialize h_t (cond. variance) and epsilon_t (residuals or error term)
# 58 elements (as many as forecasts)
ht.fcst <- res.fcst <- rep(0, 58)
for (i in 1:58) {
if (i == 1) { # use last observation
ht.fcst[i] <- Price.garch11$coef[1] +
Price.garch11$coef[2] * resid(arima113.fit)[length(Price)]^2 +
Price.garch11$coef[3] * ht[length(Price)]
} else { # use previous predictions
ht.fcst[i] <- Price.garch11$coef[1] +
Price.garch11$coef[2] * res.fcst[i-1]^2 +
Price.garch11$coef[3] * ht.fcst[i-1]
}
res.fcst[i] <- sqrt(ht.fcst[i]) # epsilon_t = omega_t * sqrt(h_t)
#### SHOULDN'T I USE THIS LINE BELOW INSTEAD???
res.fcst[i] <- rnorm(1) * sqrt(ht.fcst[i])
#### THAT GWN(0,1) COMPONENT MAKES h_t FLUCTUATES MUCH MORE
#### PROBABLY NOT APPROPRIATE FOR FORECASTING
}
Price.fcst.lower <- as.numeric(arima113.fit.fcast$mean) + res.fcst -
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
Price.fcst.upper <- as.numeric(arima113.fit.fcast$mean) + res.fcst +
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
## @knitr P4-GARCH_6
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper, rev(Price.fcst.lower)), col=rgb(0, 0, 0, 0.25),
border = NA)
# Variation of Price during observation period
Price.lower <- fitted.values(arima113.fit) - res.CI.halfwidth
Price.upper <- fitted.values(arima113.fit) + res.CI.halfwidth
# Forecasts
# Initialize h_t (cond. variance) and epsilon_t (residuals or error term)
# 58 elements (as many as forecasts)
ht.fcst <- res.fcst <- rep(0, 58)
for (i in 1:58) {
if (i == 1) { # use last observation
ht.fcst[i] <- Price.garch11$coef[1] +
Price.garch11$coef[2] * resid(arima113.fit)[length(Price)]^2 +
Price.garch11$coef[3] * ht[length(Price)]
} else { # use previous predictions
ht.fcst[i] <- Price.garch11$coef[1] +
Price.garch11$coef[2] * res.fcst[i-1]^2 +
Price.garch11$coef[3] * ht.fcst[i-1]
}
res.fcst[i] <- sqrt(ht.fcst[i]) # epsilon_t = omega_t * sqrt(h_t)
}
# Lower & upper limits of the Price forecasts CI
Price.fcst.lower <- as.numeric(arima113.fit.fcast$mean) + res.fcst -
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
Price.fcst.upper <- as.numeric(arima113.fit.fcast$mean) + res.fcst +
c(arima113.fit.fcast$upper[, '95%'] - arima113.fit.fcast$mean) /
sd(resid(arima113.fit.fcast)) * sqrt(ht.fcst)
## @knitr P4-GARCH_6
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper, rev(Price.fcst.lower)), col=rgb(0, 0, 0, 0.25),
border = NA)
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.2, rev(Price.fcst.lower.2)), col=rgb(0, 0, 0, 0.25),
border = NA)
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.3, rev(Price.fcst.lower.3)), col=rgb(0, 0, 0, 0.25),
border = NA)
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.3, rev(Price.fcst.lower.3)), col=rgb(0, 0, 0, 0.25),
border = NA)
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.3, rev(Price.fcst.lower.3)), col=rgb(0, 0, 0, 0.25),
border = NA)
plot(arima113.fit.fcast, ylim = c(1, 6),
xlab = "Year (time period: month)",
main = paste0("58-step ahead Forecast and Original Series\n",
"with confidence intervals (ARIMA(1,1,3)/GARCH(1,1)"),
ylab = "Original and Forecasted Values")
polygon(c(time(Price), rev(time(Price))),
c(Price.upper, rev(Price.lower)), col=rgb(0, 0, 0, 0.25), border = NA)
polygon(c(time(arima113.fit.fcast$mean),
rev(time(arima113.fit.fcast$mean))),
c(Price.fcst.upper.3, rev(Price.fcst.lower.3)), col=rgb(0, 0, 0, 0.25),
border = NA)
## @knitr P4-GARCH_11
head(cbind(sqrt(ht.fcst), res.fcst.2$standardDeviation,
res.fcst.3$standardDeviation))
plot(sqrt(ht.fcst), ylim=c(0,.2), type = 'l', col = 'red',
xlab = "Steps ahead", ylab = expression(h[t]),
main=expression(paste("Standard deviation (", h[t], ") of the forecasts")))
lines(res.fcst.2$standardDeviation, col = 'blue')
lines(res.fcst.3$standardDeviation, col = 'green')
leg.txt <- c("GARCH(1,1) using own code on residuals of ARIMA(1,1,3)",
"GARCH(1,1) using fGarch on residuals of ARIMA(1,1,3)",
"ARMA(1,3)/GARCH(1,1) using fGarch on differenced Price series")
legend("bottomright", legend = leg.txt, lty = c(1, 1, 1), lwd = c(1, 1, 1),
col = c("red", "blue", "green"), bty = 'n', cex = 0.9)
ht.fcast
